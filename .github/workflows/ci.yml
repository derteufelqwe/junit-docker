name: JUnitInDocker CI Pipeline

#  - name: "Debug"
#    uses: lhotari/action-upterm@v1

on:
  push:
    branches: ["master"]
  release:
    types: ["published"]
  workflow_dispatch:


jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      # Prepare the environment
      - name: "Clone Code"
        uses: actions/checkout@v2
      - name: "Setup JDK 8"
        uses: actions/setup-java@v1
        with:
          java-version: 8

      - name: "Test"
        run: |
          echo "${{ env.GITHUB_EVENT_NAME == 'push' }}"
          echo "${{ env.GITHUB_EVENT_NAME }}" == "push"


#      # Gradle setup and build
#      - name: "Cache gradle wrapper"
#        uses: actions/cache@v2
#        with:
#          path: ~/.gradle/wrapper
#          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}
#      - name: "Build with Gradle"
#        run: ./gradlew build
#      - name: "Fetch build-artifact name"
#        run: |
#          name=$(./gradlew -q artifactName)
#          echo "ARTIFACT_NAME=$name" >> $GITHUB_ENV
#
#      # Upload jar to Github packages
#      - name: "Upload to GitHub packages"
#        if: ${{ env.GITHUB_EVENT_NAME == 'push' }}
#        env:
#          GITHUB_TOKEN: $GITHUB_TOKEN
#        run: ./gradlew publish
#
#      # Attach jar as release artifact
#      - name: "Release"
#        uses: softprops/action-gh-release@v1
#        if: env.GITHUB_EVENT_NAME == 'release'
#        with:
#          files: build/libs/${{ env.ARTIFACT_NAME }}
