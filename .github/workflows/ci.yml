name: JUnitInDocker CI Pipeline

#  - name: "Debug"
#    uses: lhotari/action-upterm@v1

on:
  push:
    branches: ["master"]
  release:
    types: ["published"]
  workflow_dispatch:


jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      # Prepare the environment
      - name: "Clone Code"
        uses: actions/checkout@v2
      - name: "Setup JDK 8"
        uses: actions/setup-java@v1
        with:
          java-version: 8

      # Gradle setup and build
      - name: "Cache gradle wrapper"
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}
      - name: "Build with Gradle"
        run: ./gradlew build
      - name: "Fetch build-artifact name"
        run: |
          name=$(./gradlew -q artifactName)
          echo "ARTIFACT_NAME=$name" >> $GITHUB_ENV

      - name: "Debug"
        env:
          GITHUB_TOKEN: ${{ env.GITHUB_TOKEN }}
        uses: lhotari/action-upterm@v1

      # Upload jar to Github packages
      - name: "Upload to GitHub packages"
#        if: github.event_name == 'release'
        env:
          GITHUB_TOKEN: $GITHUB_TOKEN
        run: |
          echo "${{ env.GITHUB_TOKEN }}"
          ./gradlew publish

      # Attach jar as release artifact
      - name: "Release"
        uses: softprops/action-gh-release@v1
        if: github.event_name == 'release'
        with:
          files: build/libs/${{ env.ARTIFACT_NAME }}
